-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.actions
(
    id serial NOT NULL,
    type_id integer NOT NULL,
    user_id integer NOT NULL,
    project_id integer NOT NULL,
    date timestamp without time zone NOT NULL,
    CONSTRAINT actions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.areas
(
    id serial NOT NULL,
    area character varying NOT NULL,
    CONSTRAINT areas_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.chat_files
(
    id serial NOT NULL,
    chat_message_id integer NOT NULL,
    file_id integer NOT NULL,
    CONSTRAINT chat_files_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.chats
(
    id serial NOT NULL,
    project_id integer NOT NULL,
    creationdate date NOT NULL,
    CONSTRAINT chats_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.chats_messages
(
    id serial NOT NULL,
    chat_id integer NOT NULL,
    sender_id integer NOT NULL,
    message text NOT NULL,
    sent_time timestamp with time zone NOT NULL,
    CONSTRAINT chats_messages_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.countries
(
    id serial NOT NULL,
    name character varying NOT NULL,
    CONSTRAINT countries_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.files
(
    id serial NOT NULL,
    uploaded_by integer NOT NULL,
    filename character varying(200) NOT NULL,
    filepath text NOT NULL,
    uploaded_at timestamp with time zone NOT NULL,
    CONSTRAINT files_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.notifications
(
    id serial NOT NULL,
    type_id integer NOT NULL,
    date date NOT NULL,
    state character varying NOT NULL,
    CONSTRAINT notifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.project_notifications
(
    id serial NOT NULL,
    project_id integer NOT NULL,
    noti_id integer NOT NULL,
    CONSTRAINT project_notifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.projects
(
    id serial NOT NULL,
    state_id integer NOT NULL,
    name character varying(200) NOT NULL,
    startdate date NOT NULL,
    enddate date NOT NULL,
    creationdate date NOT NULL,
    CONSTRAINT projects_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.requests
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    project_id integer NOT NULL,
    ex_user integer,
    task_id integer,
    status_id integer NOT NULL,
    accepted_by integer,
    rejected_by integer,
    action_type character varying(50) NOT NULL,
    reason text NOT NULL,
    request_date timestamp with time zone NOT NULL,
    CONSTRAINT requests_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id serial NOT NULL,
    name character varying NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.states
(
    id integer NOT NULL,
    state character varying(100) NOT NULL,
    CONSTRAINT states_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.status
(
    id serial NOT NULL,
    status_name character varying(100) NOT NULL,
    description text NOT NULL,
    CONSTRAINT status_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.task_files
(
    id serial NOT NULL,
    file_id integer NOT NULL,
    task_id integer NOT NULL,
    CONSTRAINT task_files_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.task_requirements
(
    id serial NOT NULL,
    task_id integer NOT NULL,
    requirement character varying(250) NOT NULL,
    is_completed boolean NOT NULL,
    CONSTRAINT task_requirements_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tasks
(
    id serial NOT NULL,
    project_id integer NOT NULL,
    title character varying NOT NULL,
    description text NOT NULL,
    creation_date timestamp without time zone NOT NULL,
    started_date timestamp without time zone NOT NULL,
    finished_date timestamp without time zone,
    CONSTRAINT tasks_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.types
(
    id serial NOT NULL,
    type character varying(100) NOT NULL,
    active boolean NOT NULL,
    CONSTRAINT types_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    country_id integer,
    role_id integer,
    area_id integer,
    name character varying(100) NOT NULL,
    tel character varying(20),
    email character varying(100) NOT NULL,
    passw character varying(100) NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users_notifications
(
    id serial NOT NULL,
    noti_id integer NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT users_notifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users_projects
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    project_id integer NOT NULL,
    CONSTRAINT users_projects_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users_tasks
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    task_id integer NOT NULL,
    CONSTRAINT users_tasks_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.actions
    ADD CONSTRAINT project FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.actions
    ADD CONSTRAINT type FOREIGN KEY (type_id)
    REFERENCES public.types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.actions
    ADD CONSTRAINT "user" FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.chat_files
    ADD CONSTRAINT chat_messages_fk FOREIGN KEY (chat_message_id)
    REFERENCES public.chats_messages (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.chat_files
    ADD CONSTRAINT file_fk FOREIGN KEY (file_id)
    REFERENCES public.files (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.chats
    ADD CONSTRAINT project_fk FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.chats_messages
    ADD CONSTRAINT chat_fk FOREIGN KEY (chat_id)
    REFERENCES public.chats (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.chats_messages
    ADD CONSTRAINT sender_id FOREIGN KEY (sender_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.files
    ADD CONSTRAINT users_fk FOREIGN KEY (uploaded_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notifications
    ADD CONSTRAINT type FOREIGN KEY (type_id)
    REFERENCES public.types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.project_notifications
    ADD CONSTRAINT notis FOREIGN KEY (noti_id)
    REFERENCES public.notifications (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.project_notifications
    ADD CONSTRAINT project FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.projects
    ADD CONSTRAINT state_fk FOREIGN KEY (state_id)
    REFERENCES public.states (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT accepted_fk FOREIGN KEY (accepted_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT ex_fk FOREIGN KEY (ex_user)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT project_fk FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT rejected_fk FOREIGN KEY (rejected_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT status_fk FOREIGN KEY (status_id)
    REFERENCES public.status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT task_fk FOREIGN KEY (task_id)
    REFERENCES public.tasks (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT user_fk FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.task_files
    ADD CONSTRAINT file_fk FOREIGN KEY (file_id)
    REFERENCES public.files (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.task_files
    ADD CONSTRAINT task_fk FOREIGN KEY (task_id)
    REFERENCES public.tasks (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.task_requirements
    ADD CONSTRAINT task_fk FOREIGN KEY (task_id)
    REFERENCES public.tasks (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tasks
    ADD CONSTRAINT project FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT area_fk FOREIGN KEY (area_id)
    REFERENCES public.areas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT country_fk FOREIGN KEY (country_id)
    REFERENCES public.countries (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT role_fk FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_notifications
    ADD CONSTRAINT notis FOREIGN KEY (noti_id)
    REFERENCES public.notifications (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_notifications
    ADD CONSTRAINT "user" FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_projects
    ADD CONSTRAINT project_fk FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_projects
    ADD CONSTRAINT user_fk FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_tasks
    ADD CONSTRAINT task FOREIGN KEY (task_id)
    REFERENCES public.tasks (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_tasks
    ADD CONSTRAINT "user" FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;